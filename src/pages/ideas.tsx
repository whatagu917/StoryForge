import React, { useState } from 'react';
import { Lightbulb, Sparkles, Tag, Plus, Search } from 'lucide-react';

interface Idea {
  id: string;
  title: string;
  description: string;
  tags: string[];
  aiGenerated: boolean;
  createdAt: string;
}

export default function Ideas() {
  const [ideas, setIdeas] = useState<Idea[]>([]);
  const [selectedIdea, setSelectedIdea] = useState<Idea | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);

  const handleGenerateIdea = async () => {
    setIsLoading(true);
    try {
      // TODO: Implement AI idea generation
      const newIdea: Idea = {
        id: Date.now().toString(),
        title: 'New Story Idea',
        description: 'A compelling story idea generated by AI...',
        tags: ['fantasy', 'adventure'],
        aiGenerated: true,
        createdAt: new Date().toISOString(),
      };
      setIdeas([newIdea, ...ideas]);
    } catch (err) {
      setError(err instanceof Error ? err : new Error('Failed to generate idea'));
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      <div className="bg-white shadow rounded-lg">
        <div className="px-4 py-5 sm:p-6">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-lg font-medium text-gray-900">Story Ideas</h2>
            <button
              onClick={handleGenerateIdea}
              disabled={isLoading}
              className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
            >
              <Plus className="h-5 w-5 mr-2" />
              Generate Idea
            </button>
          </div>

          {ideas.length === 0 ? (
            <div className="text-center py-12">
              <Lightbulb className="mx-auto h-12 w-12 text-gray-400" />
              <h3 className="mt-2 text-sm font-medium text-gray-900">No ideas yet</h3>
              <p className="mt-1 text-sm text-gray-500">Get started by generating a new story idea.</p>
            </div>
          ) : (
            <div className="space-y-4">
              {ideas.map((idea) => (
                <div
                  key={idea.id}
                  className="flex items-start justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer"
                  onClick={() => setSelectedIdea(idea)}
                >
                  <div className="flex-1">
                    <div className="flex items-center space-x-2">
                      <h3 className="text-sm font-medium text-gray-900">{idea.title}</h3>
                      {idea.aiGenerated && (
                        <Sparkles className="h-4 w-4 text-yellow-500" />
                      )}
                    </div>
                    <p className="mt-1 text-sm text-gray-500">{idea.description}</p>
                    <div className="mt-2 flex flex-wrap gap-2">
                      {idea.tags.map((tag) => (
                        <span
                          key={tag}
                          className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800"
                        >
                          <Tag className="h-3 w-3 mr-1" />
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                  <div className="ml-4">
                    <span className="text-sm text-gray-500">
                      {new Date(idea.createdAt).toLocaleDateString()}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>

      {selectedIdea && (
        <div className="bg-white shadow rounded-lg">
          <div className="px-4 py-5 sm:p-6">
            <h3 className="text-lg font-medium text-gray-900 mb-4">Idea Details</h3>
            <div className="space-y-4">
              <div>
                <h4 className="text-sm font-medium text-gray-500">Title</h4>
                <p className="mt-1 text-sm text-gray-900">{selectedIdea.title}</p>
              </div>
              <div>
                <h4 className="text-sm font-medium text-gray-500">Description</h4>
                <p className="mt-1 text-sm text-gray-900">{selectedIdea.description}</p>
              </div>
              <div>
                <h4 className="text-sm font-medium text-gray-500">Tags</h4>
                <div className="mt-1 flex flex-wrap gap-2">
                  {selectedIdea.tags.map((tag) => (
                    <span
                      key={tag}
                      className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800"
                    >
                      <Tag className="h-3 w-3 mr-1" />
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
              <div>
                <h4 className="text-sm font-medium text-gray-500">Created At</h4>
                <p className="mt-1 text-sm text-gray-900">
                  {new Date(selectedIdea.createdAt).toLocaleString()}
                </p>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 